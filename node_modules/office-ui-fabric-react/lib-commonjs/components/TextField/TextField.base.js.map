{"version":3,"file":"TextField.base.js","sourceRoot":"../src/","sources":["components/TextField/TextField.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { IProcessedStyleSet } from '../../Styling';\r\nimport { IStyleFunctionOrObject } from '../../Utilities';\r\nimport { ITextField, ITextFieldProps } from './TextField.types';\r\nimport { Label, ILabelStyleProps, ILabelStyles } from '../../Label';\r\nimport { Icon } from '../../Icon';\r\nimport {\r\n  DelayedRender,\r\n  BaseComponent,\r\n  getId,\r\n  getNativeProps,\r\n  inputProperties,\r\n  textAreaProperties,\r\n  createRef,\r\n  classNamesFunction\r\n} from '../../Utilities';\r\nimport { ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\r\n\r\nconst getClassNames = classNamesFunction<ITextFieldStyleProps, ITextFieldStyles>();\r\n\r\nexport interface ITextFieldState {\r\n  value: string;\r\n\r\n  /** Is true when the control has focus. */\r\n  isFocused: boolean;\r\n\r\n  /**\r\n   * The validation error message.\r\n   *\r\n   * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\r\n   * - If we have done the validation and there is validation error, errorMessage is the validation error message.\r\n   */\r\n  errorMessage: string;\r\n}\r\n\r\nconst DEFAULT_STATE_VALUE = '';\r\n\r\nexport class TextFieldBase extends BaseComponent<ITextFieldProps, ITextFieldState> implements ITextField {\r\n  public static defaultProps: ITextFieldProps = {\r\n    multiline: false,\r\n    resizable: true,\r\n    autoAdjustHeight: false,\r\n    underlined: false,\r\n    borderless: false,\r\n    onChange: () => {\r\n      /* noop */\r\n    },\r\n    onBeforeChange: () => {\r\n      /* noop */\r\n    },\r\n    onNotifyValidationResult: () => {\r\n      /* noop */\r\n    },\r\n    onGetErrorMessage: () => undefined,\r\n    deferredValidationTime: 200,\r\n    errorMessage: '',\r\n    validateOnFocusIn: false,\r\n    validateOnFocusOut: false,\r\n    validateOnLoad: true\r\n  };\r\n\r\n  private _id: string;\r\n  private _descriptionId: string;\r\n  private _delayedValidate: (value: string | undefined) => void;\r\n  private _isMounted: boolean;\r\n  private _lastValidation: number;\r\n  private _latestValue: string | undefined;\r\n  private _latestValidateValue: string | undefined;\r\n  private _isDescriptionAvailable: boolean;\r\n  private _textElement = createRef<HTMLTextAreaElement | HTMLInputElement | null>();\r\n  private _classNames: IProcessedStyleSet<ITextFieldStyles>;\r\n\r\n  public constructor(props: ITextFieldProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      iconClass: 'iconProps',\r\n      addonString: 'prefix',\r\n      onRenderAddon: 'onRenderPrefix',\r\n      onChanged: 'onChange'\r\n    });\r\n\r\n    this._warnMutuallyExclusive({\r\n      value: 'defaultValue'\r\n    });\r\n\r\n    this._id = props.id || getId('TextField');\r\n    this._descriptionId = getId('TextFieldDescription');\r\n\r\n    if (props.value !== undefined) {\r\n      this._latestValue = props.value;\r\n    } else if (props.defaultValue !== undefined) {\r\n      this._latestValue = props.defaultValue;\r\n    } else {\r\n      this._latestValue = DEFAULT_STATE_VALUE;\r\n    }\r\n\r\n    this.state = {\r\n      value: this._latestValue,\r\n      isFocused: false,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this._onInputChange = this._onInputChange.bind(this);\r\n    this._onFocus = this._onFocus.bind(this);\r\n    this._onBlur = this._onBlur.bind(this);\r\n\r\n    this._delayedValidate = this._async.debounce(this._validate, this.props.deferredValidationTime);\r\n    this._lastValidation = 0;\r\n    this._isDescriptionAvailable = false;\r\n  }\r\n\r\n  /**\r\n   * Gets the current value of the text field.\r\n   */\r\n  public get value(): string | undefined {\r\n    return this.state.value;\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._isMounted = true;\r\n    this._adjustInputHeight();\r\n\r\n    if (this.props.validateOnLoad) {\r\n      this._validate(this.state.value);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: ITextFieldProps): void {\r\n    const { onBeforeChange } = this.props;\r\n\r\n    // If old value prop was undefined, then component is controlled and we should\r\n    //    respect new undefined value and update state accordingly.\r\n    if (newProps.value !== this.state.value && (newProps.value !== undefined || this.props.value !== undefined)) {\r\n      if (onBeforeChange) {\r\n        onBeforeChange(newProps.value);\r\n      }\r\n\r\n      this._id = newProps.id || this._id;\r\n      this._setValue(newProps.value);\r\n\r\n      const { validateOnFocusIn, validateOnFocusOut } = newProps;\r\n      if (!(validateOnFocusIn || validateOnFocusOut)) {\r\n        this._delayedValidate(newProps.value);\r\n      }\r\n    }\r\n\r\n    // If component is not currently controlled and defaultValue changes, set value to new defaultValue.\r\n    if (newProps.defaultValue !== this.props.defaultValue && newProps.value === undefined) {\r\n      this._setValue(newProps.defaultValue);\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      borderless,\r\n      className,\r\n      description,\r\n      disabled,\r\n      iconClass,\r\n      iconProps,\r\n      inputClassName,\r\n      label,\r\n      multiline,\r\n      required,\r\n      underlined,\r\n      addonString, // @deprecated\r\n      prefix,\r\n      resizable,\r\n      suffix,\r\n      theme,\r\n      styles,\r\n      onRenderAddon = this._onRenderAddon, // @deprecated\r\n      onRenderPrefix = this._onRenderPrefix,\r\n      onRenderSuffix = this._onRenderSuffix,\r\n      onRenderLabel = this._onRenderLabel,\r\n      onRenderDescription = this._onRenderDescription\r\n    } = this.props;\r\n    const { isFocused } = this.state;\r\n    const errorMessage = this._errorMessage;\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className,\r\n      disabled,\r\n      focused: isFocused,\r\n      required,\r\n      multiline,\r\n      hasLabel: !!label,\r\n      hasErrorMessage: !!errorMessage,\r\n      borderless,\r\n      resizable,\r\n      hasIcon: !!iconProps,\r\n      underlined,\r\n      iconClass,\r\n      inputClassName\r\n    });\r\n\r\n    // If a custom description render function is supplied then treat description as always available.\r\n    // Otherwise defer to the presence of description or error message text.\r\n    this._isDescriptionAvailable = Boolean(this.props.onRenderDescription || description || errorMessage);\r\n\r\n    return (\r\n      <div className={this._classNames.root}>\r\n        <div className={this._classNames.wrapper}>\r\n          {onRenderLabel(this.props, this._onRenderLabel)}\r\n          <div className={this._classNames.fieldGroup}>\r\n            {(addonString !== undefined || this.props.onRenderAddon) && (\r\n              <div className={this._classNames.prefix}>{onRenderAddon(this.props, this._onRenderAddon)}</div>\r\n            )}\r\n            {(prefix !== undefined || this.props.onRenderPrefix) && (\r\n              <div className={this._classNames.prefix}>{onRenderPrefix(this.props, this._onRenderPrefix)}</div>\r\n            )}\r\n            {multiline ? this._renderTextArea() : this._renderInput()}\r\n            {(iconClass || iconProps) && <Icon className={this._classNames.icon} {...iconProps} />}\r\n            {(suffix !== undefined || this.props.onRenderSuffix) && (\r\n              <div className={this._classNames.suffix}>{onRenderSuffix(this.props, this._onRenderSuffix)}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {this._isDescriptionAvailable && (\r\n          <span id={this._descriptionId}>\r\n            {onRenderDescription(this.props, this._onRenderDescription)}\r\n            {errorMessage && (\r\n              <div role=\"alert\">\r\n                <DelayedRender>\r\n                  <p className={this._classNames.errorMessage}>\r\n                    <span data-automation-id=\"error-message\">{errorMessage}</span>\r\n                  </p>\r\n                </DelayedRender>\r\n              </div>\r\n            )}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the text field\r\n   */\r\n  public focus() {\r\n    if (this._textElement.current) {\r\n      this._textElement.current.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Blurs the text field.\r\n   */\r\n  public blur() {\r\n    if (this._textElement.current) {\r\n      this._textElement.current.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects the text field\r\n   */\r\n  public select() {\r\n    if (this._textElement.current) {\r\n      this._textElement.current.select();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the selection start of the text field to a specified value\r\n   */\r\n  public setSelectionStart(value: number): void {\r\n    if (this._textElement.current) {\r\n      this._textElement.current.selectionStart = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the selection end of the text field to a specified value\r\n   */\r\n  public setSelectionEnd(value: number): void {\r\n    if (this._textElement.current) {\r\n      this._textElement.current.selectionEnd = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the selection start of the text field\r\n   */\r\n  public get selectionStart(): number | null {\r\n    return this._textElement.current ? this._textElement.current.selectionStart : -1;\r\n  }\r\n\r\n  /**\r\n   * Gets the selection end of the text field\r\n   */\r\n  public get selectionEnd(): number | null {\r\n    return this._textElement.current ? this._textElement.current.selectionEnd : -1;\r\n  }\r\n\r\n  /**\r\n   * Sets the start and end positions of a selection in a text field.\r\n   * @param start - Index of the start of the selection.\r\n   * @param end - Index of the end of the selection.\r\n   */\r\n  public setSelectionRange(start: number, end: number): void {\r\n    if (this._textElement.current) {\r\n      (this._textElement.current as HTMLInputElement).setSelectionRange(start, end);\r\n    }\r\n  }\r\n\r\n  private _setValue(value?: string) {\r\n    this._latestValue = value;\r\n    this.setState(\r\n      {\r\n        value: value || DEFAULT_STATE_VALUE,\r\n        errorMessage: ''\r\n      } as ITextFieldState,\r\n      () => {\r\n        this._adjustInputHeight();\r\n      }\r\n    );\r\n  }\r\n\r\n  private _onFocus(ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(ev);\r\n    }\r\n\r\n    this.setState({ isFocused: true });\r\n    if (this.props.validateOnFocusIn) {\r\n      this._validate(this.state.value);\r\n    }\r\n  }\r\n\r\n  private _onBlur(ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(ev);\r\n    }\r\n\r\n    this.setState({ isFocused: false });\r\n    if (this.props.validateOnFocusOut) {\r\n      this._validate(this.state.value);\r\n    }\r\n  }\r\n\r\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element | null => {\r\n    const { label, required } = props;\r\n    // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\r\n    const labelStyles = this._classNames.subComponentStyles\r\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\r\n      : undefined;\r\n\r\n    if (label) {\r\n      return (\r\n        <Label required={required} htmlFor={this._id} styles={labelStyles}>\r\n          {props.label}\r\n        </Label>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element | null => {\r\n    if (props.description) {\r\n      return <span className={this._classNames.description}>{props.description}</span>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // @deprecated\r\n  private _onRenderAddon(props: ITextFieldProps): JSX.Element {\r\n    const { addonString } = props;\r\n    return <span style={{ paddingBottom: '1px' }}>{addonString}</span>;\r\n  }\r\n\r\n  private _onRenderPrefix(props: ITextFieldProps): JSX.Element {\r\n    const { prefix } = props;\r\n    return <span style={{ paddingBottom: '1px' }}>{prefix}</span>;\r\n  }\r\n\r\n  private _onRenderSuffix(props: ITextFieldProps): JSX.Element {\r\n    const { suffix } = props;\r\n    return <span style={{ paddingBottom: '1px' }}>{suffix}</span>;\r\n  }\r\n\r\n  private get _errorMessage(): string | undefined {\r\n    let { errorMessage } = this.state;\r\n    if (!errorMessage && this.props.errorMessage) {\r\n      errorMessage = this.props.errorMessage;\r\n    }\r\n\r\n    return errorMessage;\r\n  }\r\n\r\n  private _renderTextArea(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\r\n    const textAreaProps = getNativeProps(this.props, textAreaProperties, ['defaultValue']);\r\n\r\n    return (\r\n      <textarea\r\n        id={this._id}\r\n        {...textAreaProps}\r\n        ref={this._textElement}\r\n        value={this.state.value}\r\n        onInput={this._onInputChange}\r\n        onChange={this._onInputChange}\r\n        className={this._classNames.field}\r\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\r\n        aria-invalid={!!this.state.errorMessage}\r\n        aria-label={this.props.ariaLabel}\r\n        readOnly={this.props.readOnly}\r\n        onFocus={this._onFocus}\r\n        onBlur={this._onBlur}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _renderInput(): React.ReactElement<React.HTMLAttributes<HTMLInputElement>> {\r\n    const inputProps = getNativeProps<React.HTMLAttributes<HTMLInputElement>>(this.props, inputProperties, ['defaultValue']);\r\n\r\n    return (\r\n      <input\r\n        type={'text'}\r\n        id={this._id}\r\n        {...inputProps}\r\n        ref={this._textElement}\r\n        value={this.state.value}\r\n        onInput={this._onInputChange}\r\n        onChange={this._onInputChange}\r\n        className={this._classNames.field}\r\n        aria-label={this.props.ariaLabel}\r\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\r\n        aria-invalid={!!this.state.errorMessage}\r\n        readOnly={this.props.readOnly}\r\n        onFocus={this._onFocus}\r\n        onBlur={this._onBlur}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onInputChange(event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void {\r\n    event.persist();\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n    const value: string = element.value;\r\n\r\n    // Avoid doing unnecessary work when the value has not changed.\r\n    if (value === this._latestValue) {\r\n      return;\r\n    }\r\n    this._latestValue = value;\r\n\r\n    this.setState(\r\n      {\r\n        value: value\r\n      } as ITextFieldState,\r\n      () => {\r\n        this._adjustInputHeight();\r\n\r\n        if (this.props.onChange) {\r\n          this.props.onChange(event, value);\r\n        }\r\n\r\n        if (this.props.onChanged) {\r\n          this.props.onChanged(value);\r\n        }\r\n      }\r\n    );\r\n\r\n    const { validateOnFocusIn, validateOnFocusOut } = this.props;\r\n    if (!(validateOnFocusIn || validateOnFocusOut)) {\r\n      this._delayedValidate(value);\r\n    }\r\n\r\n    const onBeforeChange = this.props.onBeforeChange as (newValue: any) => void;\r\n    onBeforeChange(value);\r\n  }\r\n\r\n  private _validate(value: string | undefined): void {\r\n    const { validateOnFocusIn, validateOnFocusOut } = this.props;\r\n\r\n    // In case of _validate called multi-times during executing validate logic with promise return.\r\n    if (this._latestValidateValue === value && !(validateOnFocusIn || validateOnFocusOut)) {\r\n      return;\r\n    }\r\n\r\n    this._latestValidateValue = value;\r\n    const onGetErrorMessage = this.props.onGetErrorMessage as (value: string) => string | PromiseLike<string> | undefined;\r\n    const result = onGetErrorMessage(value || '');\r\n\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        this.setState({\r\n          errorMessage: result\r\n        } as ITextFieldState);\r\n        this._notifyAfterValidate(value, result);\r\n      } else {\r\n        const currentValidation: number = ++this._lastValidation;\r\n\r\n        result.then((errorMessage: string) => {\r\n          if (this._isMounted && currentValidation === this._lastValidation) {\r\n            this.setState({ errorMessage } as ITextFieldState);\r\n          }\r\n          this._notifyAfterValidate(value, errorMessage);\r\n        });\r\n      }\r\n    } else {\r\n      this._notifyAfterValidate(value, '');\r\n    }\r\n  }\r\n\r\n  private _notifyAfterValidate(value: string | undefined, errorMessage: string): void {\r\n    if (this._isMounted && value === this.state.value && this.props.onNotifyValidationResult) {\r\n      this.props.onNotifyValidationResult(errorMessage, value);\r\n    }\r\n  }\r\n\r\n  private _adjustInputHeight(): void {\r\n    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\r\n      const textField = this._textElement.current;\r\n      textField.style.height = '';\r\n      const scrollHeight = textField.scrollHeight + 2; // +2 to avoid vertical scroll bars\r\n      textField.style.height = scrollHeight + 'px';\r\n    }\r\n  }\r\n}\r\n"]}