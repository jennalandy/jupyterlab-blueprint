{"version":3,"file":"Calendar.doc.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.doc.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DateRangeType, DayOfWeek } from 'office-ui-fabric-react/lib/Calendar';\r\nimport { IDocPageProps } from '../../common/DocPage.types';\r\nimport { CalendarButtonExample } from './examples/Calendar.Button.Example';\r\nimport { CalendarInlineExample } from './examples/Calendar.Inline.Example';\r\nimport { CalendarStatus } from './Calendar.checklist';\r\nimport { addMonths, addYears, addWeeks } from '../../utilities/dateMath/DateMath';\r\n\r\nconst CalendarButtonExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Button.Example.tsx') as string;\r\nconst CalendarButtonExampleCodepen = require('!raw-loader!office-ui-fabric-react/lib/codepen/components/Calendar/Calendar.Button.Example.Codepen.txt') as string;\r\nconst CalendarInlineExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Inline.Example.tsx') as string;\r\nconst CalendarInlineExampleCodepen = require('!raw-loader!office-ui-fabric-react/lib/codepen/components/Calendar/Calendar.Inline.Example.Codepen.txt') as string;\r\n\r\nconst today = new Date(Date.now());\r\n\r\nexport const CalendarPageProps: IDocPageProps = {\r\n  title: 'Calendar',\r\n  componentName: 'Calendar',\r\n  componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Calendar',\r\n  componentStatus: CalendarStatus,\r\n  examples: [\r\n    {\r\n      title: 'Inline Calendar',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          isMonthPickerVisible={false}\r\n          dateRangeType={DateRangeType.Day}\r\n          autoNavigateOnSelection={false}\r\n          showGoToToday={true}\r\n        />\r\n      ),\r\n      codepenJS: CalendarInlineExampleCodepen\r\n    },\r\n    {\r\n      title: 'Inline Calendar with overlayed month picker when header is clicked',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          showMonthPickerAsOverlay={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          dateRangeType={DateRangeType.Day}\r\n          autoNavigateOnSelection={false}\r\n          showGoToToday={false}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with month picker',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.Day}\r\n          autoNavigateOnSelection={false}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          showGoToToday={true}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with week selection',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.Week}\r\n          autoNavigateOnSelection={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          showGoToToday={true}\r\n          showNavigateButtons={true}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with week selection and date boundary (minDate, maxDate)',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.Week}\r\n          autoNavigateOnSelection={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          showGoToToday={true}\r\n          showNavigateButtons={true}\r\n          minDate={addWeeks(today, -2)}\r\n          maxDate={addWeeks(today, 2)}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with month selection',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.Month}\r\n          autoNavigateOnSelection={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          showGoToToday={true}\r\n          showNavigateButtons={true}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with week numbers',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          isMonthPickerVisible={false}\r\n          dateRangeType={DateRangeType.Day}\r\n          autoNavigateOnSelection={false}\r\n          showGoToToday={true}\r\n          showWeekNumbers={true}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with 6 weeks display by default',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          isMonthPickerVisible={false}\r\n          dateRangeType={DateRangeType.Day}\r\n          autoNavigateOnSelection={false}\r\n          showGoToToday={true}\r\n          showSixWeeksByDefault={true}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with month picker and no day picker',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.Month}\r\n          autoNavigateOnSelection={false}\r\n          showGoToToday={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          isDayPickerVisible={false}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Inline Calendar with date boundary (minDate, maxDate)',\r\n      code: CalendarInlineExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.Day}\r\n          autoNavigateOnSelection={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          showGoToToday={false}\r\n          minDate={addMonths(today, -1)}\r\n          maxDate={addYears(today, 1)}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Calendar with selectableDays = [Tuesday, Wednesday, Friday, Saturday] provided, first day of week = Monday',\r\n      code: CalendarButtonExampleCode,\r\n\r\n      view: (\r\n        <CalendarInlineExample\r\n          dateRangeType={DateRangeType.WorkWeek}\r\n          firstDayOfWeek={DayOfWeek.Monday}\r\n          autoNavigateOnSelection={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          showGoToToday={true}\r\n          workWeekDays={[DayOfWeek.Tuesday, DayOfWeek.Saturday, DayOfWeek.Wednesday, DayOfWeek.Friday]}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Calendar launched from a button',\r\n      code: CalendarButtonExampleCode,\r\n\r\n      view: <CalendarButtonExample highlightCurrentMonth={true} />,\r\n      codepenJS: CalendarButtonExampleCodepen\r\n    },\r\n    {\r\n      title: 'Month picker launched from a button',\r\n      code: CalendarButtonExampleCode,\r\n\r\n      view: (\r\n        <CalendarButtonExample\r\n          isDayPickerVisible={false}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          buttonString={'Click for Month Picker'}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Calendar with overlayed month picker launched from a button',\r\n      code: CalendarButtonExampleCode,\r\n\r\n      view: (\r\n        <CalendarButtonExample\r\n          showMonthPickerAsOverlay={true}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          buttonString={'Click for Overlayed Day Picker and Month Picker'}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      title: 'Calendar with overlayed month picker launched from a button without show go to today button',\r\n      code: CalendarButtonExampleCode,\r\n\r\n      view: (\r\n        <CalendarButtonExample\r\n          showMonthPickerAsOverlay={true}\r\n          showGoToToday={false}\r\n          highlightCurrentMonth={false}\r\n          highlightSelectedMonth={true}\r\n          buttonString={'Click for Overlayed Day Picker and Month Picker without go to today button'}\r\n        />\r\n      )\r\n    }\r\n  ],\r\n  propertiesTablesSources: [require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/Calendar.types.ts')],\r\n  overview: require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/docs/CalendarOverview.md'),\r\n  bestPractices: '',\r\n  dos: require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/docs/CalendarDos.md'),\r\n  donts: require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/docs/CalendarDonts.md'),\r\n  isHeaderVisible: true,\r\n  isFeedbackVisible: true\r\n};\r\n"]}